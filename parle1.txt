################################################################################
# ðŸš€ VPC SETUP WITH PUBLIC & PRIVATE SUBNETS ON AWS (GUI-BASED) â€“ ALL-IN-ONE
################################################################################

# ðŸ“Œ COMPONENTS CREATED:
# - VPC with CIDR 10.1.0.0/16
# - Public Subnet (10.1.1.0/24) in AZ-a
# - Private Subnet (10.1.2.0/24) in AZ-b
# - Internet Gateway (IGW)
# - NAT Gateway (for private subnet internet access)
# - Route Tables (Public & Private)
# - EC2 Instance in Public Subnet (for SSH)
################################################################################

# âœ… STEP 1: CREATE VPC
1. AWS Console â†’ VPC â†’ Your VPCs â†’ Create VPC
   - Name: MyVPC
   - IPv4 CIDR: 10.1.0.0/16
   - Leave others default â†’ Create VPC

# âœ… STEP 2: CREATE SUBNETS
2. VPC â†’ Subnets â†’ Create Subnet
   - Name: PublicSubnet
   - VPC: MyVPC
   - AZ: Choose any (e.g., ap-south-1a)
   - CIDR: 10.1.1.0/24 â†’ Create
3. Repeat for private subnet:
   - Name: PrivateSubnet
   - AZ: Different (e.g., ap-south-1b)
   - CIDR: 10.1.2.0/24 â†’ Create

# âœ… STEP 3: CREATE INTERNET GATEWAY (IGW)
4. VPC â†’ Internet Gateways â†’ Create IGW
   - Name: MyIGW â†’ Create
   - Select IGW â†’ Actions â†’ Attach to VPC â†’ Select MyVPC

# âœ… STEP 4: CREATE PUBLIC ROUTE TABLE
5. VPC â†’ Route Tables â†’ Create Route Table
   - Name: PublicRT
   - VPC: MyVPC â†’ Create
6. Select PublicRT â†’ Routes â†’ Edit routes
   - Add Route: Destination: 0.0.0.0/0, Target: MyIGW â†’ Save
7. Subnet Associations â†’ Edit â†’ Select PublicSubnet â†’ Save

# âœ… STEP 5: ENABLE AUTO-ASSIGN PUBLIC IP
8. VPC â†’ Subnets â†’ Select PublicSubnet â†’ Actions â†’ Modify auto-assign IP
   - Enable auto-assign public IPv4 â†’ Save

# âœ… STEP 6: CREATE ELASTIC IP & NAT GATEWAY
9. EC2 â†’ Elastic IPs â†’ Allocate new address â†’ Allocate
   - Select EIP â†’ Actions â†’ Associate to NAT Gateway (after step 10)
10. VPC â†’ NAT Gateway â†’ Create NAT Gateway
   - Name: MyNAT
   - Subnet: PublicSubnet
   - Elastic IP: Select allocated one â†’ Create NAT Gateway

# âœ… STEP 7: CREATE PRIVATE ROUTE TABLE
11. VPC â†’ Route Tables â†’ Create Route Table
    - Name: PrivateRT
    - VPC: MyVPC â†’ Create
12. Select PrivateRT â†’ Routes â†’ Edit routes
    - Add Route: Destination: 0.0.0.0/0, Target: NAT Gateway (MyNAT) â†’ Save
13. Subnet Associations â†’ Edit â†’ Select PrivateSubnet â†’ Save

# âœ… STEP 8: LAUNCH EC2 INSTANCE IN PUBLIC SUBNET
14. EC2 â†’ Launch Instance
    - AMI: Amazon Linux 2
    - Instance Type: t2.micro
    - Key Pair: Create or Select existing
    - Network Settings:
      - VPC: MyVPC
      - Subnet: PublicSubnet
      - Auto-assign Public IP: ENABLED
      - Firewall: Create Security Group:
         - Inbound Rule: SSH, Port 22, Source: Anywhere (0.0.0.0/0)
    - Launch Instance

# âœ… STEP 9: SSH INTO INSTANCE
15. From EC2 â†’ Copy Public IP
16. Terminal (on your PC):
```bash
chmod 400 your-key.pem
ssh -i your-key.pem ec2-user@<Public-IP>
