# ✅ Application Load Balancer Lab – Minimal & Generic Steps

# 1. Create VPC
# Name: vpc-1, CIDR block: 10.0.0.0/16

# 2. Create Internet Gateway
# Name: igw-1
# Attach to vpc-1

# 3. Create Subnets
# subnet-1: AZ: az-1a, CIDR: 10.0.0.0/20
# subnet-2: AZ: az-1c, CIDR: 10.0.16.0/20

# 4. Create Route Table
# Name: rt-1
# Associate rt-1 with subnet-1 and subnet-2
# Add route: Destination = 0.0.0.0/0, Target = igw-1

# 5. Launch EC2 Instances (x2)
# ec2-name-1 → subnet-1
# ec2-name-2 → subnet-2
# AMI: Ubuntu, Type: t2.micro
# Auto-assign Public IP: enabled
# Security Group: allow HTTP (80), SSH (22) from 0.0.0.0/0

# User data script (for both instances)
#!/bin/bash
sudo apt update -y
sudo apt install -y apache2
sudo systemctl start apache2
sudo systemctl enable apache2
echo "<h1>Server Details</h1><p><strong>Hostname:</strong> $(hostname)</p><p><strong>IP Address:</strong> $(hostname -I | cut -d' ' -f1)</p>" > /var/www/html/index.html
sudo systemctl restart apache2

# 6. Verify EC2 Setup
# Open browser → http://<public-ip-ec2-name-1>
# Open browser → http://<public-ip-ec2-name-2>

# 7. Create Target Group
# Name: tg-1
# Type: instance
# Protocol: HTTP, Port: 80
# VPC: vpc-1
# Register ec2-name-1 and ec2-name-2 to tg-1

# 8. Create Load Balancer
# Name: alb-1
# Scheme: internet-facing, IP type: IPv4
# VPC: vpc-1
# Subnets: subnet-1 and subnet-2
# Security Group: allow HTTP (80) from 0.0.0.0/0
# Listener: HTTP on port 80 → Forward to tg-1

# 9. Test Load Balancer
# Copy DNS name of alb-1 → open in browser
# Refresh multiple times → verify hostname/IP changes
